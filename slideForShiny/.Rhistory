trainIndex = createDataPartition(diagnosis,p=0.5,list=FALSE)
training = adData[trainIndex,]
testing = adData[trainIndex,]
View(testing)
View(training)
adData = data.frame(diagnosis,predictors)
trainIndex = createDataPartition(diagnosis,p=0.5,list=FALSE)
training = adData[trainIndex,]
testing = adData[trainIndex,]
View(testing)
View(training)
require(twitteR)  ##R中Twitter的api包
install.packages(twitteR)
install.packages("twitteR")
require(twitteR)  ##R中Twitter的api包
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL = "https://api.twitter.com/oauth/access_token"
authURL = "https://api.twitter.com/oauth/authorize"
consumerKey = "your_key"
consumerKey = " KXuYZl2NvSUARPebL9Ao24d9S"
consumerSecret = " LYVChXOt9kPICVJFDoqp4IwkNjTWUGAb7uLxfLb0BJl2LQsLCO"
Cred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=requestURL,
accessURL=accessURL,
authURL=authURL)
Cred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
consumerKey = "ChiffonLang"
consumerSecret = "Ldw142857"
Cred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=requestURL,
accessURL=accessURL,
authURL=authURL)
Cred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
myapp<-oauth_app("twitter",
key="ChiffonLang",secret="Ldw142857")
library(httr)
myapp<-oauth_app("twitter",
key="ChiffonLang",secret="Ldw142857")
consumerKey = "KXuYZl2NvSUARPebL9Ao24d9S"
consumerSecret = "LYVChXOt9kPICVJFDoqp4IwkNjTWUGAb7uLxfLb0BJl2LQsLCO"
Cred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=requestURL,
accessURL=accessURL,
authURL=authURL)
Cred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
sig<-sign_oauth1.0(myapp,token="KXuYZl2NvSUARPebL9Ao24d9S",
token_secret="LYVChXOt9kPICVJFDoqp4IwkNjTWUGAb7uLxfLb0BJl2LQsLCO")
library(Rcurl)
install.packages("Rcurl")
install.packages("RCurl")
install.packages("RCurl")
options( RCurlOptions = list(verbose = TRUE,
proxy = "http://mycompany.com:10080",
ssl.verifyhost=FALSE, ssl.verifypeer=FALSE,
cainfo="D:\Program Files\R\R-3.0.1\library\RCurl\CurlSSL\cacert.pem"))
options( RCurlOptions = list(verbose = TRUE,
proxy = "http://mycompany.com:10080",
ssl.verifyhost=FALSE, ssl.verifypeer=FALSE,
cainfo="D:\\Program Files\\R\\R-3.0.1\\library\\RCurl\\CurlSSL\\cacert.pem"))
cred <- OAuthFactory$new(consumerKey="KXuYZl2NvSUARPebL9Ao24d9S",
consumerSecret="LYVChXOt9kPICVJFDoqp4IwkNjTWUGAb7uLxfLb0BJl2LQsLCO",
requestURL="https://api.twitter.com/oauth/request_token",
accessURL="https://api.twitter.com/oauth/access_token",
authURL="https://api.twitter.com/oauth/authorize")
cred$handshake()
cred$handshake()
options( RCurlOptions = list(verbose = TRUE,
ssl.verifyhost=FALSE, ssl.verifypeer=FALSE,
cainfo="D:\\Program Files\\R\\R-3.0.1\\library\\RCurl\\CurlSSL\\cacert.pem"))
cred <- OAuthFactory$new(consumerKey="KXuYZl2NvSUARPebL9Ao24d9S",
consumerSecret="LYVChXOt9kPICVJFDoqp4IwkNjTWUGAb7uLxfLb0BJl2LQsLCO",
requestURL="https://api.twitter.com/oauth/request_token",
accessURL="https://api.twitter.com/oauth/access_token",
authURL="https://api.twitter.com/oauth/authorize")
cred$handshake()
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL = "https://api.twitter.com/oauth/access_token"
authURL = "https://api.twitter.com/oauth/authorize"
consumerKey = "KXuYZl2NvSUARPebL9Ao24d9S"
consumerSecret = "LYVChXOt9kPICVJFDoqp4IwkNjTWUGAb7uLxfLb0BJl2LQsLCO"
Cred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=requestURL,
accessURL=accessURL,
authURL=authURL)
cred$handshake()
require(twitteR)  ##R中Twitter的api包
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL = "https://api.twitter.com/oauth/access_token"
authURL = "https://api.twitter.com/oauth/authorize"
consumerKey = "KXuYZl2NvSUARPebL9Ao24d9S"
consumerSecret = "LYVChXOt9kPICVJFDoqp4IwkNjTWUGAb7uLxfLb0BJl2LQsLCO"
Cred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=requestURL,
accessURL=accessURL,
authURL=authURL)
cred$handshake()
Cred$handshake()
cred = getTwitterOAuth("KXuYZl2NvSUARPebL9Ao24d9S",
"LYVChXOt9kPICVJFDoqp4IwkNjTWUGAb7uLxfLb0BJl2LQsLCO")
Sys.setenv("http_proxy"="http://username:passwd@host:port")
or
Sys.setenv("http_proxy"="http://host:port")
cred = getTwitterOAuth("KXuYZl2NvSUARPebL9Ao24d9S",
+                        "LYVChXOt9kPICVJFDoqp4IwkNjTWUGAb7uLxfLb0BJl2LQsLCO")
cred = getTwitterOAuth("KXuYZl2NvSUARPebL9Ao24d9S",
"LYVChXOt9kPICVJFDoqp4IwkNjTWUGAb7uLxfLb0BJl2LQsLCO")
require(twitteR)  ##R中Twitter的api包
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL = "https://api.twitter.com/oauth/access_token"
authURL = "https://api.twitter.com/oauth/authorize"
consumerKey = "KXuYZl2NvSUARPebL9Ao24d9S"
consumerSecret = "LYVChXOt9kPICVJFDoqp4IwkNjTWUGAb7uLxfLb0BJl2LQsLCO"
Cred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=requestURL,
accessURL=accessURL,
authURL=authURL)
cred$handshake()
Cred$handshake()
Sys.setenv("http_proxy"="http://username:passwd@host:port")
Cred$handshake()
library(twitteR)
library(ggplot2)
me <- getUser('aiww')
lianyue <- getUser('lianyue')
summary(df.sub[,c(2,3,5)])
myapp<-oauth_app("twitter",
key="ChiffonLang",secret="Ldw142857")
sig<-sign_oauth1.0(myapp,token="KXuYZl2NvSUARPebL9Ao24d9S",
token_secret="LYVChXOt9kPICVJFDoqp4IwkNjTWUGAb7uLxfLb0BJl2LQsLCO")
library(httr)
myapp<-oauth_app("twitter",
library(httr)
myapp<-oauth_app("twitter",
key="ChiffonLang",secret="Ldw142857")
sig<-sign_oauth1.0(myapp,token="KXuYZl2NvSUARPebL9Ao24d9S",
token_secret="LYVChXOt9kPICVJFDoqp4IwkNjTWUGAb7uLxfLb0BJl2LQsLCO")
homeTL=GET("https://api.twitter.com/1.1/statuses/home_timeline.json",sig)
date()
date: `{r}date()`
format(date(),"%B %d %y")
library(httr)
library(twitteR)
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL = "https://api.twitter.com/oauth/access_token"
authURL = "https://api.twitter.com/oauth/authorize"
consumerKey = "KXuYZl2NvSUARPebL9Ao24d9S"
consumerSecret = "LYVChXOt9kPICVJFDoqp4IwkNjTWUGAb7uLxfLb0BJl2LQsLCO"
Cred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=requestURL,
accessURL=accessURL,
authURL=authURL)
Cred$handshake()
Cred$handshake()
install.packages("gmlnet")
install.packages("glmnet")
install.packages("C:/Users/Administrator/Desktop/glmnet_1.9-8.zip", repos = NULL)
Cred$handshake()
Cred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
Cred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
0787721
Cred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
Cred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
Cred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
Cred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
Cred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
Cred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
install.packages("gbm")
require(twitteR)  ##R中Twitter的api包
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL = "https://api.twitter.com/oauth/access_token"
authURL = "https://api.twitter.com/oauth/authorize"
consumerKey = "KXuYZl2NvSUARPebL9Ao24d9S"
consumerSecret = "LYVChXOt9kPICVJFDoqp4IwkNjTWUGAb7uLxfLb0BJl2LQsLCO"
Cred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=requestURL,
accessURL=accessURL,
authURL=authURL)
Cred$handshake()
Cred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
Cred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
Cred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
registerTwitterOAuth(Cred)
house.cards <- searchTwitter("Amazon", n = 1500, cainfo="cacert.pem")
house.cards <- searchTwitter("Amazon", n = 600, cainfo="cacert.pem")
house.cards <- searchTwitter("Amazon", n = 600, cainfo="cacert.pem")
registerTwitterOAuth(Cred)
house.cards <- searchTwitter("Amazon", n = 600, cainfo="cacert.pem")
require(twitteR)  ##R中Twitter的api包
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL = "https://api.twitter.com/oauth/access_token"
authURL = "https://api.twitter.com/oauth/authorize"
consumerKey = "KXuYZl2NvSUARPebL9Ao24d9S"
consumerSecret = "LYVChXOt9kPICVJFDoqp4IwkNjTWUGAb7uLxfLb0BJl2LQsLCO"
Cred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=requestURL,
accessURL=accessURL,
authURL=authURL)
Cred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
Cred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
Amazon <- searchTwitter("Amazon", n = 600, cainfo="cacert.pem")
registerTwitterOAuth(Cred)
Amazon <- searchTwitter("Amazon", n = 600, cainfo="cacert.pem")
head(Amazon)
Amazon2<- searchTwitter("Amazon", n = 600, cainfo="cacert.pem")
names(Amazon2)
class(Amazon2)
class(Amazon2)[1]
class(Amazon2)[[1]]
Amazon2[1]
Amazon[1]
Amazon[2]
Amazon[3]
A<-list(Amazon,Amazon2)
A
A<-rbind(Amazon,Amazon2)
A
A[1]
A[2]
Amazon<-0
for (i in 1:10){
Amazon[i] <- searchTwitter("Amazon", n = 98, cainfo="cacert.pem")
}
Amazon[1]
Amazon[1] <- searchTwitter("Amazon", n = 98, cainfo="cacert.pem")
Amazon1 <- searchTwitter("Amazon", n = 98, cainfo="cacert.pem")
Amazon2 <- searchTwitter("Amazon", n = 98, cainfo="cacert.pem")
Amazon3 <- searchTwitter("Amazon", n = 98, cainfo="cacert.pem")
Amazon4 <- searchTwitter("Amazon", n = 98, cainfo="cacert.pem")
Amazon5 <- searchTwitter("Amazon", n = 98, cainfo="cacert.pem")
Amazon6 <- searchTwitter("Amazon", n = 98, cainfo="cacert.pem")
Amazon7 <- searchTwitter("Amazon", n = 98, cainfo="cacert.pem")
Amazon8 <- searchTwitter("Amazon", n = 98, cainfo="cacert.pem")
Amazon9 <- searchTwitter("Amazon", n = 98, cainfo="cacert.pem")
Amazon10 <- searchTwitter("Amazon", n = 98, cainfo="cacert.pem")
A<-rbind(Amazon1,Amazon2,Amazon3,
Amazon4,Amazon5,Amazon6,
Amazon7,Amazon8,Amazon9,Amazon10 )
A<-rbind(Amazon1,Amazon2,Amazon3,,Amazon5,Amazon6,Amazon7,Amazon8,Amazon9,Amazon10 )
A<-rbind(Amazon1,Amazon2,Amazon3,Amazon5,Amazon6,Amazon7,Amazon8,Amazon9,Amazon10 )
A<-rbind(Amazon1,Amazon2,Amazon3,Amazon6,Amazon7,Amazon8,Amazon9,Amazon10 )
Amazon4 <- searchTwitter("Amazon", n = 98, cainfo="cacert.pem")
Amazon5 <- searchTwitter("Amazon", n = 98, cainfo="cacert.pem")
Amazon6 <- searchTwitter("Amazon", n = 98, cainfo="cacert.pem")
A<-rbind(Amazon1,Amazon2,Amazon3,
Amazon4,Amazon5,Amazon6,
Amazon7,Amazon8,Amazon9,Amazon10 )
length(A)
head(A)
A[1]
A[980]
A[20]
save.image("E:/【supstat】/NY-project[vi index]/data.RData")
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL = "https://api.twitter.com/oauth/access_token"
authURL = "https://api.twitter.com/oauth/authorize"
consumerKey = "KXuYZl2NvSUARPebL9Ao24d9S"
consumerSecret = "LYVChXOt9kPICVJFDoqp4IwkNjTWUGAb7uLxfLb0BJl2LQsLCO"
Cred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=requestURL,
accessURL=accessURL,
authURL=authURL)
registerTwitterOAuth(Cred)
Cred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
registerTwitterOAuth(Cred)
AT&T1 <- searchTwitter("Amazon", n = 98, cainfo="cacert.pem")
AT&T1 <- searchTwitter("Amazon", n = 98, cainfo="cacert.pem")
AT&T1 <- searchTwitter("Amazon", n = 98, cainfo="cacert.pem")
AT&T1 <- searchTwitter("Amazon", n = 98, cainfo="cacert.pem")
registerTwitterOAuth(Cred)
AT&T2 <- searchTwitter("AT&T", n = 980)
![alt text](figures/1.png)
install.packages("glm")
require(twitteR)  ##R中Twitter的api包
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL = "https://api.twitter.com/oauth/access_token"
authURL = "https://api.twitter.com/oauth/authorize"
consumerKey = "KXuYZl2NvSUARPebL9Ao24d9S"
consumerSecret = "LYVChXOt9kPICVJFDoqp4IwkNjTWUGAb7uLxfLb0BJl2LQsLCO"
Cred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=requestURL,
accessURL=accessURL,
authURL=authURL)
Cred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
AT&T2 <- searchTwitter("AT&T", n = 980)
registerTwitterOAuth(Cred)
AT&T2 <- searchTwitter("AT&T", n = 980)
AT&T1 <- searchTwitter("AT&T", n = 98, cainfo="cacert.pem")
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
AT&T1 <- searchTwitter("AT&T", n = 98, cainfo="cacert.pem")
Amazon1 <- searchTwitter("Amazon", n = 98, cainfo="cacert.pem")
searchTwitter("#beer", n=100)
Rtweets(n=37)
options(RCurlOptions = list(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl")))
searchTwitter("#beer", n=100)
Rtweets(n=37)
library(knitr)
(f = system.file("examples", "knitr-minimal.Rnw", package = "knitr"))
f
knit2pdf("E:\\【supstat】\\kaggle\\slide\\slidde.Rpres")
knit2pdf("E:\\【supstat】\\kaggle\\slide\\slidde.Rpres")
knit2pdf("E:\\【supstat】\\kaggle\\slide\\slidde.Rpres")
knit2pdf("E:\\【supstat】\\kaggle\\slide\\slidde.Rpres")
require(twitteR)  ##R中Twitter的api包
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL = "https://api.twitter.com/oauth/access_token"
authURL = "https://api.twitter.com/oauth/authorize"
consumerKey = "KXuYZl2NvSUARPebL9Ao24d9S"
consumerSecret = "LYVChXOt9kPICVJFDoqp4IwkNjTWUGAb7uLxfLb0BJl2LQsLCO"
Cred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=requestURL,
accessURL=accessURL,
authURL=authURL)
Cred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
Cred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
require(twitteR)  ##R涓璗witter鐨刟pi鍖?
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL = "https://api.twitter.com/oauth/access_token"
authURL = "https://api.twitter.com/oauth/authorize"
consumerKey = "KXuYZl2NvSUARPebL9Ao24d9S"
consumerSecret = "LYVChXOt9kPICVJFDoqp4IwkNjTWUGAb7uLxfLb0BJl2LQsLCO"
Cred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=requestURL,
accessURL=accessURL,
authURL=authURL)
Cred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
registerTwitterOAuth(Cred)
options(RCurlOptions = list(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl")))
AT&T1 <- searchTwitter("AT&T", n = 98, cainfo="cacert.pem")
options(RCurlOptions = list(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl")))
AT&T1 <- searchTwitter("AT&T", n = 98, cainfo="cacert.pem")
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
AT&T1 <- searchTwitter("AT&T", n = 98, cainfo="cacert.pem")
AT1 <- searchTwitter("AT&T", n = 98, cainfo="cacert.pem")
At2 <- searchTwitter("AT&T", n = 980)
install.packages(kernlab)
install.packages("kernlab")
set.seed(123)
x <- rbind(matrix(rnorm(120), , 2), matrix(rnorm(120,mean = 3), , 2))
y <- matrix(c(rep(1, 60), rep(-1, 60)))
svp <- ksvm(x, y, type = "C-svc")
plot(svp, data = x)
library(kernlab)
set.seed(123)
x <- rbind(matrix(rnorm(120), , 2), matrix(rnorm(120,mean = 3), , 2))
y <- matrix(c(rep(1, 60), rep(-1, 60)))
svp <- ksvm(x, y, type = "C-svc")
plot(svp, data = x)
svp <- ksvm(x, y, type = "C-svc",kpar="automatic")
svp <- ksvm(x, y, type = "C-svc",kernel="rbfdot")
plot(svp, data = x)
install.packages("randomforest")
install.packages("randomForest")
data(iris)
set.seed(71)
iris.rf <- randomForest(Species ~ ., data=iris, importance=TRUE,
proximity=TRUE)
print(iris.rf)
library(randomFroest)
library(randomForest)
data(iris)
set.seed(71)
iris.rf <- randomForest(Species ~ ., data=iris, importance=TRUE,
proximity=TRUE)
print(iris.rf)
plot(iris.rf,type="l")
plot(iris.rf,type="l",main=deparse(substitute(x)))
fit<-glm( y~mod1+mod2+mod3, family=binomial(link=logit))
y<-c(1,0,0,1,1)
mod1<-c(1,0,0,0,1)
mod2<-c(1,0,1,1,1)
mod3<-c(0,0,0,1,1)
fit<-glm( y~mod1+mod2+mod3, family=binomial(link=logit))
predict<-predict(fit,cbind(mod1,mod2,mod3,type="response"))
predict<-predict(fit,data.frame(mod1,mod2,mod3,type="response"))
cbind(y,mod1,mod2,mod3,predict)
predict<-predict(fit,data.frame(mod1,mod2,mod3),type="response")
cbind(y,mod1,mod2,mod3,predict)
predict<-round(predict,1)
cbind(y,mod1,mod2,mod3,predict)
require(twitteR)  ##R涓璗witter鐨刟pi鍖?
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL = "https://api.twitter.com/oauth/access_token"
authURL = "https://api.twitter.com/oauth/authorize"
consumerKey = "KXuYZl2NvSUARPebL9Ao24d9S"
consumerSecret = "LYVChXOt9kPICVJFDoqp4IwkNjTWUGAb7uLxfLb0BJl2LQsLCO"
Cred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=requestURL,
accessURL=accessURL,
authURL=authURL)
Cred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
options(RCurlOptions = list(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl")))
Cred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
library(HyperbolicDist)
library(quantreg)
library(MASS)
simulate_gibbs<-function(n=100){
x<<-rep(1,n)
x<<-cbind(x,rnorm(n),rnorm(n))
#### data:x
epsilon1<-rnorm(n)
epsilon2<-rt(n,3)
epsilon3<-(x[,2]+1)*rnorm(n)
###three epsilon,simulate from a normal,t,heterosceadastic normal
y1<<-x%*%c(1,1,1)+epsilon1
y2<<-x%*%c(1,1,1)+epsilon2
y3<<-x%*%c(1,1,1)+epsilon3
}
mean_fit1<-0
mean_fit2<-0
mean_fit3<-0
RMSE_fit1<-0
RMSE_fit2<-0
RMSE_fit3<-0
cof<-matrix(rep(1,9),3,3)
for (i in 1:1000){
simulate_gibbs()
fit<-rq(y1~x[,2]+x[,3],tau=t)
fit$coefficients/1000+mean_fit1->mean_fit1
(fit$coefficients-cof)*(fit$coefficients-cof)/1000+
RMSE_fit1->RMSE_fit1
### quantreg for y1
fit<-rq(y2~x[,2]+x[,3],tau=t)
fit$coefficients/1000+mean_fit2->mean_fit2
(fit$coefficients-cof)*(fit$coefficients-cof)/1000+
RMSE_fit2->RMSE_fit2
###quantreg for y2
fit<-rq(y3~x[,2]+x[,3],tau=t)
fit$coefficients/1000+mean_fit3->mean_fit3
(fit$coefficients-cof)*(fit$coefficients-cof)/1000+
RMSE_fit3->RMSE_fit3
###quantreg for y3
}
t<-c(0.1,0.5,0.9)
mean_fit1<-0
mean_fit2<-0
mean_fit3<-0
RMSE_fit1<-0
RMSE_fit2<-0
RMSE_fit3<-0
cof<-matrix(rep(1,9),3,3)
for (i in 1:1000){
simulate_gibbs()
fit<-rq(y1~x[,2]+x[,3],tau=t)
fit$coefficients/1000+mean_fit1->mean_fit1
(fit$coefficients-cof)*(fit$coefficients-cof)/1000+
RMSE_fit1->RMSE_fit1
### quantreg for y1
fit<-rq(y2~x[,2]+x[,3],tau=t)
fit$coefficients/1000+mean_fit2->mean_fit2
(fit$coefficients-cof)*(fit$coefficients-cof)/1000+
RMSE_fit2->RMSE_fit2
###quantreg for y2
fit<-rq(y3~x[,2]+x[,3],tau=t)
fit$coefficients/1000+mean_fit3->mean_fit3
(fit$coefficients-cof)*(fit$coefficients-cof)/1000+
RMSE_fit3->RMSE_fit3
###quantreg for y3
}
citation()
library(shiny)
library(shinyapp)
library(shinyapps)
setwd("C:/Users/Administrator/Desktop/shiny")
runApp()
runApp()
runApp()
runApp()
library(slidify)
library(shinyapps)
shinyapps::setAccountInfo(name='chiffon', token='FD51A065477215E3BD0B0A0E6652C814', secret='67kxO3/gSH4VpI7Z60TARYDuassY3/6zUQFqa5QA')
deployApp()
setwd("~/GitHub/developpingDataProduct")
setwd("D:/MyBackup/我的文档/GitHub/developpingDataProduct")
author(slideForShiny)
author("slideForShiny")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
